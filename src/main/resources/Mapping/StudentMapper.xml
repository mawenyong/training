<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.trainingsystem.Dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.trainingsystem.Model.Student" >
    <id column="studentid" property="studentid" jdbcType="INTEGER" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="numberclassid" property="numberclassid" jdbcType="INTEGER" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="tie" property="tie" jdbcType="VARCHAR" />
    <result column="ancestralhome" property="ancestralhome" jdbcType="VARCHAR" />
    <result column="enrollmentdate" property="enrollmentdate" jdbcType="TIMESTAMP" />
    <result column="graduationdate" property="graduationdate" jdbcType="TIMESTAMP" />
    <result column="updatedate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="personnelId" property="personnelid" jdbcType="INTEGER" />
    <result column="MarketPersonnelId" property="marketpersonnelid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    studentid, school, sno, numberclassid, major, tie, ancestralhome, enrollmentdate, 
    graduationdate, updatedate, personnelId, MarketPersonnelId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where studentid = #{studentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where studentid = #{studentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.trainingsystem.Model.Student" >
    insert into student (studentid, school, sno, 
      numberclassid, major, tie, 
      ancestralhome, enrollmentdate, graduationdate, 
      updatedate, personnelId, MarketPersonnelId
      )
    values (#{studentid,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{sno,jdbcType=VARCHAR}, 
      #{numberclassid,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, #{tie,jdbcType=VARCHAR}, 
      #{ancestralhome,jdbcType=VARCHAR}, #{enrollmentdate,jdbcType=TIMESTAMP}, #{graduationdate,jdbcType=TIMESTAMP}, 
      #{updatedate,jdbcType=TIMESTAMP}, #{personnelid,jdbcType=INTEGER}, #{marketpersonnelid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.trainingsystem.Model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="sno != null" >
        sno,
      </if>
      <if test="numberclassid != null" >
        numberclassid,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="tie != null" >
        tie,
      </if>
      <if test="ancestralhome != null" >
        ancestralhome,
      </if>
      <if test="enrollmentdate != null" >
        enrollmentdate,
      </if>
      <if test="graduationdate != null" >
        graduationdate,
      </if>
      <if test="updatedate != null" >
        updatedate,
      </if>
      <if test="personnelid != null" >
        personnelId,
      </if>
      <if test="marketpersonnelid != null" >
        MarketPersonnelId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="numberclassid != null" >
        #{numberclassid,jdbcType=INTEGER},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="tie != null" >
        #{tie,jdbcType=VARCHAR},
      </if>
      <if test="ancestralhome != null" >
        #{ancestralhome,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null" >
        #{enrollmentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationdate != null" >
        #{graduationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="personnelid != null" >
        #{personnelid,jdbcType=INTEGER},
      </if>
      <if test="marketpersonnelid != null" >
        #{marketpersonnelid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.trainingsystem.Model.Student" >
    update student
    <set >
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="sno != null" >
        sno = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="numberclassid != null" >
        numberclassid = #{numberclassid,jdbcType=INTEGER},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="tie != null" >
        tie = #{tie,jdbcType=VARCHAR},
      </if>
      <if test="ancestralhome != null" >
        ancestralhome = #{ancestralhome,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null" >
        enrollmentdate = #{enrollmentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationdate != null" >
        graduationdate = #{graduationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        updatedate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="personnelid != null" >
        personnelId = #{personnelid,jdbcType=INTEGER},
      </if>
      <if test="marketpersonnelid != null" >
        MarketPersonnelId = #{marketpersonnelid,jdbcType=INTEGER},
      </if>
    </set>
    where studentid = #{studentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.trainingsystem.Model.Student" >
    update student
    set school = #{school,jdbcType=VARCHAR},
      sno = #{sno,jdbcType=VARCHAR},
      numberclassid = #{numberclassid,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      tie = #{tie,jdbcType=VARCHAR},
      ancestralhome = #{ancestralhome,jdbcType=VARCHAR},
      enrollmentdate = #{enrollmentdate,jdbcType=TIMESTAMP},
      graduationdate = #{graduationdate,jdbcType=TIMESTAMP},
      updatedate = #{updatedate,jdbcType=TIMESTAMP},
      personnelId = #{personnelid,jdbcType=INTEGER},
      MarketPersonnelId = #{marketpersonnelid,jdbcType=INTEGER}
    where studentid = #{studentid,jdbcType=INTEGER}
  </update>
</mapper>