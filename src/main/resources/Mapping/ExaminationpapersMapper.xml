<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.trainingsystem.Dao.ExaminationpapersMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.trainingsystem.Model.Examinationpapers" >
    <id column="examinationpapersid" property="examinationpapersid" jdbcType="INTEGER" />
    <result column="testpaperid" property="testpaperid" jdbcType="INTEGER" />
    <result column="itembankid" property="itembankid" jdbcType="INTEGER" />
    <result column="sequencenumber" property="sequencenumber" jdbcType="CHAR" />
    <result column="topictypes" property="topictypes" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    examinationpapersid, testpaperid, itembankid, sequencenumber, topictypes
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.trainingsystem.Model.ExaminationpapersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examinationpapers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from examinationpapers
    where examinationpapersid = #{examinationpapersid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from examinationpapers
    where examinationpapersid = #{examinationpapersid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.trainingsystem.Model.ExaminationpapersExample" >
    delete from examinationpapers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.trainingsystem.Model.Examinationpapers" >
    insert into examinationpapers (examinationpapersid, testpaperid, 
      itembankid, sequencenumber, topictypes
      )
    values (#{examinationpapersid,jdbcType=INTEGER}, #{testpaperid,jdbcType=INTEGER}, 
      #{itembankid,jdbcType=INTEGER}, #{sequencenumber,jdbcType=CHAR}, #{topictypes,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.trainingsystem.Model.Examinationpapers" >
    insert into examinationpapers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examinationpapersid != null" >
        examinationpapersid,
      </if>
      <if test="testpaperid != null" >
        testpaperid,
      </if>
      <if test="itembankid != null" >
        itembankid,
      </if>
      <if test="sequencenumber != null" >
        sequencenumber,
      </if>
      <if test="topictypes != null" >
        topictypes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examinationpapersid != null" >
        #{examinationpapersid,jdbcType=INTEGER},
      </if>
      <if test="testpaperid != null" >
        #{testpaperid,jdbcType=INTEGER},
      </if>
      <if test="itembankid != null" >
        #{itembankid,jdbcType=INTEGER},
      </if>
      <if test="sequencenumber != null" >
        #{sequencenumber,jdbcType=CHAR},
      </if>
      <if test="topictypes != null" >
        #{topictypes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.trainingsystem.Model.ExaminationpapersExample" resultType="java.lang.Integer" >
    select count(*) from examinationpapers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update examinationpapers
    <set >
      <if test="record.examinationpapersid != null" >
        examinationpapersid = #{record.examinationpapersid,jdbcType=INTEGER},
      </if>
      <if test="record.testpaperid != null" >
        testpaperid = #{record.testpaperid,jdbcType=INTEGER},
      </if>
      <if test="record.itembankid != null" >
        itembankid = #{record.itembankid,jdbcType=INTEGER},
      </if>
      <if test="record.sequencenumber != null" >
        sequencenumber = #{record.sequencenumber,jdbcType=CHAR},
      </if>
      <if test="record.topictypes != null" >
        topictypes = #{record.topictypes,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update examinationpapers
    set examinationpapersid = #{record.examinationpapersid,jdbcType=INTEGER},
      testpaperid = #{record.testpaperid,jdbcType=INTEGER},
      itembankid = #{record.itembankid,jdbcType=INTEGER},
      sequencenumber = #{record.sequencenumber,jdbcType=CHAR},
      topictypes = #{record.topictypes,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.trainingsystem.Model.Examinationpapers" >
    update examinationpapers
    <set >
      <if test="testpaperid != null" >
        testpaperid = #{testpaperid,jdbcType=INTEGER},
      </if>
      <if test="itembankid != null" >
        itembankid = #{itembankid,jdbcType=INTEGER},
      </if>
      <if test="sequencenumber != null" >
        sequencenumber = #{sequencenumber,jdbcType=CHAR},
      </if>
      <if test="topictypes != null" >
        topictypes = #{topictypes,jdbcType=VARCHAR},
      </if>
    </set>
    where examinationpapersid = #{examinationpapersid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.trainingsystem.Model.Examinationpapers" >
    update examinationpapers
    set testpaperid = #{testpaperid,jdbcType=INTEGER},
      itembankid = #{itembankid,jdbcType=INTEGER},
      sequencenumber = #{sequencenumber,jdbcType=CHAR},
      topictypes = #{topictypes,jdbcType=VARCHAR}
    where examinationpapersid = #{examinationpapersid,jdbcType=INTEGER}
  </update>
</mapper>