<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.trainingsystem.Dao.ObtainemploymentMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.trainingsystem.Model.Obtainemployment" >
    <id column="ObtainEmploymentID" property="obtainemploymentid" jdbcType="INTEGER" />
    <result column="Sno" property="sno" jdbcType="VARCHAR" />
    <result column="EmploymentDirection" property="employmentdirection" jdbcType="VARCHAR" />
    <result column="Enclosure" property="enclosure" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="EmploymentCity" property="employmentcity" jdbcType="VARCHAR" />
    <result column="EmploymentDate" property="employmentdate" jdbcType="DATE" />
    <result column="UpdateDate" property="updatedate" jdbcType="DATE" />
    <result column="CreateDate" property="createdate" jdbcType="DATE" />
    <result column="InternshipPay" property="internshippay" jdbcType="INTEGER" />
    <result column="CorrectionOfSalary" property="correctionofsalary" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ObtainEmploymentID, Sno, EmploymentDirection, Enclosure, picture, EmploymentCity, 
    EmploymentDate, UpdateDate, CreateDate, InternshipPay, CorrectionOfSalary
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.trainingsystem.Model.ObtainemploymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from obtainemployment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from obtainemployment
    where ObtainEmploymentID = #{obtainemploymentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from obtainemployment
    where ObtainEmploymentID = #{obtainemploymentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.trainingsystem.Model.ObtainemploymentExample" >
    delete from obtainemployment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.trainingsystem.Model.Obtainemployment" >
    insert into obtainemployment (ObtainEmploymentID, Sno, EmploymentDirection, 
      Enclosure, picture, EmploymentCity, 
      EmploymentDate, UpdateDate, CreateDate, 
      InternshipPay, CorrectionOfSalary)
    values (#{obtainemploymentid,jdbcType=INTEGER}, #{sno,jdbcType=VARCHAR}, #{employmentdirection,jdbcType=VARCHAR}, 
      #{enclosure,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{employmentcity,jdbcType=VARCHAR}, 
      #{employmentdate,jdbcType=DATE}, #{updatedate,jdbcType=DATE}, #{createdate,jdbcType=DATE}, 
      #{internshippay,jdbcType=INTEGER}, #{correctionofsalary,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.trainingsystem.Model.Obtainemployment" >
    insert into obtainemployment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="obtainemploymentid != null" >
        ObtainEmploymentID,
      </if>
      <if test="sno != null" >
        Sno,
      </if>
      <if test="employmentdirection != null" >
        EmploymentDirection,
      </if>
      <if test="enclosure != null" >
        Enclosure,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="employmentcity != null" >
        EmploymentCity,
      </if>
      <if test="employmentdate != null" >
        EmploymentDate,
      </if>
      <if test="updatedate != null" >
        UpdateDate,
      </if>
      <if test="createdate != null" >
        CreateDate,
      </if>
      <if test="internshippay != null" >
        InternshipPay,
      </if>
      <if test="correctionofsalary != null" >
        CorrectionOfSalary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="obtainemploymentid != null" >
        #{obtainemploymentid,jdbcType=INTEGER},
      </if>
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="employmentdirection != null" >
        #{employmentdirection,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null" >
        #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="employmentcity != null" >
        #{employmentcity,jdbcType=VARCHAR},
      </if>
      <if test="employmentdate != null" >
        #{employmentdate,jdbcType=DATE},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=DATE},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
      <if test="internshippay != null" >
        #{internshippay,jdbcType=INTEGER},
      </if>
      <if test="correctionofsalary != null" >
        #{correctionofsalary,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.trainingsystem.Model.ObtainemploymentExample" resultType="java.lang.Integer" >
    select count(*) from obtainemployment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update obtainemployment
    <set >
      <if test="record.obtainemploymentid != null" >
        ObtainEmploymentID = #{record.obtainemploymentid,jdbcType=INTEGER},
      </if>
      <if test="record.sno != null" >
        Sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.employmentdirection != null" >
        EmploymentDirection = #{record.employmentdirection,jdbcType=VARCHAR},
      </if>
      <if test="record.enclosure != null" >
        Enclosure = #{record.enclosure,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.employmentcity != null" >
        EmploymentCity = #{record.employmentcity,jdbcType=VARCHAR},
      </if>
      <if test="record.employmentdate != null" >
        EmploymentDate = #{record.employmentdate,jdbcType=DATE},
      </if>
      <if test="record.updatedate != null" >
        UpdateDate = #{record.updatedate,jdbcType=DATE},
      </if>
      <if test="record.createdate != null" >
        CreateDate = #{record.createdate,jdbcType=DATE},
      </if>
      <if test="record.internshippay != null" >
        InternshipPay = #{record.internshippay,jdbcType=INTEGER},
      </if>
      <if test="record.correctionofsalary != null" >
        CorrectionOfSalary = #{record.correctionofsalary,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update obtainemployment
    set ObtainEmploymentID = #{record.obtainemploymentid,jdbcType=INTEGER},
      Sno = #{record.sno,jdbcType=VARCHAR},
      EmploymentDirection = #{record.employmentdirection,jdbcType=VARCHAR},
      Enclosure = #{record.enclosure,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      EmploymentCity = #{record.employmentcity,jdbcType=VARCHAR},
      EmploymentDate = #{record.employmentdate,jdbcType=DATE},
      UpdateDate = #{record.updatedate,jdbcType=DATE},
      CreateDate = #{record.createdate,jdbcType=DATE},
      InternshipPay = #{record.internshippay,jdbcType=INTEGER},
      CorrectionOfSalary = #{record.correctionofsalary,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.trainingsystem.Model.Obtainemployment" >
    update obtainemployment
    <set >
      <if test="sno != null" >
        Sno = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="employmentdirection != null" >
        EmploymentDirection = #{employmentdirection,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null" >
        Enclosure = #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="employmentcity != null" >
        EmploymentCity = #{employmentcity,jdbcType=VARCHAR},
      </if>
      <if test="employmentdate != null" >
        EmploymentDate = #{employmentdate,jdbcType=DATE},
      </if>
      <if test="updatedate != null" >
        UpdateDate = #{updatedate,jdbcType=DATE},
      </if>
      <if test="createdate != null" >
        CreateDate = #{createdate,jdbcType=DATE},
      </if>
      <if test="internshippay != null" >
        InternshipPay = #{internshippay,jdbcType=INTEGER},
      </if>
      <if test="correctionofsalary != null" >
        CorrectionOfSalary = #{correctionofsalary,jdbcType=INTEGER},
      </if>
    </set>
    where ObtainEmploymentID = #{obtainemploymentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.trainingsystem.Model.Obtainemployment" >
    update obtainemployment
    set Sno = #{sno,jdbcType=VARCHAR},
      EmploymentDirection = #{employmentdirection,jdbcType=VARCHAR},
      Enclosure = #{enclosure,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      EmploymentCity = #{employmentcity,jdbcType=VARCHAR},
      EmploymentDate = #{employmentdate,jdbcType=DATE},
      UpdateDate = #{updatedate,jdbcType=DATE},
      CreateDate = #{createdate,jdbcType=DATE},
      InternshipPay = #{internshippay,jdbcType=INTEGER},
      CorrectionOfSalary = #{correctionofsalary,jdbcType=INTEGER}
    where ObtainEmploymentID = #{obtainemploymentid,jdbcType=INTEGER}
  </update>
</mapper>